"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[914],{3905:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>g});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),p=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},s=function(e){var r=p(e.components);return n.createElement(l.Provider,{value:r},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(t),m=o,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||a;return t?n.createElement(g,i(i({ref:r},s),{},{components:t})):n.createElement(g,i({ref:r},s))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c[d]="string"==typeof e?e:o,i[1]=c;for(var p=2;p<a;p++)i[p]=t[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4299:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=t(7462),o=(t(7294),t(3905));const a={},i="ImageLoader",c={unversionedId:"core/imageloader",id:"core/imageloader",title:"ImageLoader",description:"Use",source:"@site/docs/core/imageloader.md",sourceDirName:"core",slug:"/core/imageloader",permalink:"/compose-imageloader/docs/core/imageloader",draft:!1,editUrl:"https://github.com/qdsfdhvh/compose-imageloader/tree/main/docs/docs/core/imageloader.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Quick Start",permalink:"/compose-imageloader/docs/core/basic"},next:{title:"ImageRequest",permalink:"/compose-imageloader/docs/core/imagerequest"}},l={},p=[{value:"Use",id:"use",level:2},{value:"Options",id:"options",level:2},{value:"Components",id:"components",level:2},{value:"Interceptor",id:"interceptor",level:2}],s={toc:p},d="wrapper";function u(e){let{components:r,...t}=e;return(0,o.kt)(d,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"imageloader"},"ImageLoader"),(0,o.kt)("h2",{id:"use"},"Use"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"ImageLoader {\n    imageScope = CoroutineScope(SupervisorJob() + Dispatchers.Main)\n    logger = object : Logger {\n        override fun isLoggable(priority: LogPriority): Boolean = false\n        override fun log(\n            priority: LogPriority,\n            tag: String,\n            data: Any?,\n            throwable: Throwable?,\n            message: String,\n        ) {\n            // print log\n        }\n    }\n}\n")),(0,o.kt)("h2",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'ImageLoader {\n    options {\n        allowInexactSize = false\n        premultipliedAlpha = true\n        retryIfDiskDecodeError = true\n        imageConfig = Options.ImageConfig.ARGB_8888\n        scale = Scale.AUTO\n        sizeResolver = SizeResolver.Unspecified\n        memoryCachePolicy = CachePolicy.ENABLED\n        diskCachePolicy = CachePolicy.ENABLED\n        playAnimate = true\n        repeatCount = Options.REPEAT_INFINITE\n        extra {\n            put("key", "value")\n        }\n    }\n}\n')),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"ImageLoader {\n    components {\n        add(Mapper)\n        add(Keyer)\n        add(Fetcher)\n        add(Decoder)\n    }\n}\n")),(0,o.kt)("h2",{id:"interceptor"},"Interceptor"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"ImageLoader {\n    interceptor {\n        useDefaultInterceptors = true\n        // add custom interceptor\n        add(Interceptor)\n    }\n}\n")),(0,o.kt)("p",null,"default interceptor sequence:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"MappedInterceptor")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"MemoryCacheInterceptor")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"DecodeInterceptor")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"DiskCacheInterceptor")," -> ",(0,o.kt)("inlineCode",{parentName:"p"},"FetchInterceptor"),"."))}u.isMDXComponent=!0}}]);